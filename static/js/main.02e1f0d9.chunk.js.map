{"version":3,"sources":["support/utils.js","components/peg.js","components/App.js","index.js"],"names":["colors","Peg","currentRow","rowIndex","pegIndex","handlePegColor","useState","pegColorIndex","setPegColorIndex","className","onClick","newColorIndex","length","App","generateRandom","Math","floor","random","generateCodeToCrack","setCurrentRow","currentPegSelection","setCurrentPegSelection","codeToCrack","setCodeToCrack","colorIndex","updatedPegSelection","Array","fill","undefined","map","_val","index","some","a","newRowIndex","JSON","stringify","alert","submittedForRow","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wMAAaA,EAAS,CACpB,KACA,aACA,eACA,gBACA,gBACA,WACA,YCiBaC,EArBH,SAAC,GAAwD,IAAtDC,EAAqD,EAArDA,WAAYC,EAAyC,EAAzCA,SAAUC,EAA+B,EAA/BA,SAAUC,EAAqB,EAArBA,eAAqB,EACxBC,mBAAS,GADe,mBAC3DC,EAD2D,KAC5CC,EAD4C,KAGlE,OACE,qBACEC,UAAS,gDAA2CT,EAAOO,GAAlD,4BACTG,QAAS,WACP,GAAIR,IAAeC,EAAnB,CAGA,IAAIQ,EAAgBJ,EAAgB,EAChCI,EAAgBX,EAAOY,OAAS,IAClCD,EAAgB,GAElBN,EAAeD,EAAUO,GACzBH,EAAiBG,QC0FVE,EAxGH,WACV,IAAMC,EAAiB,kBACrBC,KAAKC,MAAMD,KAAKE,UAAYjB,EAAOY,OAAS,GAAK,IAE7CM,EAAsB,iBAAM,CAChCJ,IACAA,IACAA,IACAA,MARc,EAYoBR,mBADhB,GAXJ,mBAYTJ,EAZS,KAYGiB,EAZH,OAasCb,mBAAS,CAAC,EAAG,EAAG,EAAG,IAbzD,mBAaTc,EAbS,KAaYC,EAbZ,OAcsBf,mBAASY,KAd/B,mBAcTI,EAdS,KAcIC,EAdJ,KAkCVlB,EAAiB,SAACD,EAAUoB,GAChC,IAAMC,EAAmB,YAAOL,GAChCK,EAAoBrB,GAAYoB,EAChCH,EAAuBI,IAoDzB,OACE,sBAAKhB,UAAU,yBAAf,UACE,qBAAKA,UAAU,cAAf,SACE,mBAAGA,UAAU,sCAAb,6BAEF,qBAAKA,UAAU,yBAAf,SArDF,IAAIiB,MAAM,IAAIC,UAAKC,GAAWC,KAAI,SAACC,EAAMC,GAAP,OAChC,sBAAiBtB,UAAU,mCAA3B,UACE,sBAAKA,UAAU,sCAAf,UACE,cAAC,EAAD,CACEL,SAAU,EACVF,WAAYA,EACZC,SAAU4B,EACV1B,eAAgBA,IAElB,cAAC,EAAD,CACED,SAAU,EACVF,WAAYA,EACZC,SAAU4B,EACV1B,eAAgBA,IAElB,cAAC,EAAD,CACED,SAAU,EACVF,WAAYA,EACZC,SAAU4B,EACV1B,eAAgBA,IAElB,cAAC,EAAD,CACED,SAAU,EACVF,WAAYA,EACZC,SAAU4B,EACV1B,eAAgBA,OAGpB,qBAAKI,UAAU,MAAf,SACGP,IAAe6B,EACd,wBACEtB,UAAU,wDACVC,QAAS,WACHU,EAAoBY,MAAK,SAACC,GAAD,OAAa,IAANA,MA1D1B,WACtB,IAAMC,EAAchC,EAAa,EACjC,GAAIiC,KAAKC,UAAUd,KAAiBa,KAAKC,UAAUhB,GAIjD,OAHAiB,MAAM,mCACNd,EAAeL,UACfC,EAVgB,GAaE,IAAhBe,IACFG,MAAM,aACNlB,EAfgB,GAgBhBI,EAAeL,MAEjBmB,MAAM,sBACNhB,EAAuB,CAAC,EAAG,EAAG,EAAG,IACjCF,EAAce,GA8CFI,IANJ,oBAYA,qBAAK7B,UAAU,iBAzCXsB,QAqDV,wBAAQtB,UAAU,oEAAlB,SACE,qBAAKA,UAAU,oCAAf,SACE,4DChGV8B,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.02e1f0d9.chunk.js","sourcesContent":["export const colors = [\n  null,\n  \"bg-red-500\",\n  \"bg-green-500\",\n  \"bg-yellow-500\",\n  \"bg-orange-500\",\n  \"bg-black\",\n  \"bg-white\",\n];\n","import { useState } from \"react\";\nimport { colors } from \"../support/utils\";\n\nconst Peg = ({ currentRow, rowIndex, pegIndex, handlePegColor }) => {\n  const [pegColorIndex, setPegColorIndex] = useState(0);\n\n  return (\n    <div\n      className={`border mx-2 border-black rounded-full ${colors[pegColorIndex]} sm:h-12 sm:w-12 h-8 w-8`}\n      onClick={() => {\n        if (currentRow !== rowIndex) {\n          return;\n        }\n        let newColorIndex = pegColorIndex + 1;\n        if (newColorIndex > colors.length - 1) {\n          newColorIndex = 1;\n        }\n        handlePegColor(pegIndex, newColorIndex);\n        setPegColorIndex(newColorIndex);\n      }}\n    ></div>\n  );\n};\n\nexport default Peg;\n","import { useState } from \"react\";\nimport { colors } from \"../support/utils\";\nimport Peg from \"./peg\";\n\nconst App = () => {\n  const generateRandom = () =>\n    Math.floor(Math.random() * (colors.length - 1) + 1);\n\n  const generateCodeToCrack = () => [\n    generateRandom(),\n    generateRandom(),\n    generateRandom(),\n    generateRandom(),\n  ];\n\n  const startingRow = 9;\n  const [currentRow, setCurrentRow] = useState(startingRow);\n  const [currentPegSelection, setCurrentPegSelection] = useState([0, 0, 0, 0]);\n  const [codeToCrack, setCodeToCrack] = useState(generateCodeToCrack());\n\n  const submittedForRow = () => {\n    const newRowIndex = currentRow - 1;\n    if (JSON.stringify(codeToCrack) === JSON.stringify(currentPegSelection)) {\n      alert(\"Game End! You Cracked the code!\");\n      setCodeToCrack(generateCodeToCrack());\n      setCurrentRow(startingRow);\n      return;\n    }\n    if (newRowIndex === 0) {\n      alert(\"Game End!\");\n      setCurrentRow(startingRow);\n      setCodeToCrack(generateCodeToCrack());\n    }\n    alert(\"No luck, try again\");\n    setCurrentPegSelection([0, 0, 0, 0]);\n    setCurrentRow(newRowIndex);\n  };\n\n  const handlePegColor = (pegIndex, colorIndex) => {\n    const updatedPegSelection = [...currentPegSelection];\n    updatedPegSelection[pegIndex] = colorIndex;\n    setCurrentPegSelection(updatedPegSelection);\n  };\n\n  const renderBoard = () =>\n    new Array(10).fill(undefined).map((_val, index) => (\n      <div key={index} className=\"flex justify-center items-center\">\n        <div className=\"flex justify-center bg-gray-200 p-2\">\n          <Peg\n            pegIndex={0}\n            currentRow={currentRow}\n            rowIndex={index}\n            handlePegColor={handlePegColor}\n          />\n          <Peg\n            pegIndex={1}\n            currentRow={currentRow}\n            rowIndex={index}\n            handlePegColor={handlePegColor}\n          />\n          <Peg\n            pegIndex={2}\n            currentRow={currentRow}\n            rowIndex={index}\n            handlePegColor={handlePegColor}\n          />\n          <Peg\n            pegIndex={3}\n            currentRow={currentRow}\n            rowIndex={index}\n            handlePegColor={handlePegColor}\n          />\n        </div>\n        <div className=\"p-3\">\n          {currentRow === index ? (\n            <button\n              className=\"bg-green-500 rounded text-white items-center p-3 w-20\"\n              onClick={() => {\n                if (currentPegSelection.some((a) => a === 0)) {\n                  return;\n                }\n                submittedForRow();\n              }}\n            >\n              Submit\n            </button>\n          ) : (\n            <div className=\"p-3 w-20\" />\n          )}\n        </div>\n      </div>\n    ));\n\n  return (\n    <div className=\"flex flex-col h-screen\">\n      <div className=\"bg-gray-500\">\n        <p className=\"text-2xl text-white p-4 text-center\">Code Breaker!</p>\n      </div>\n      <div className=\"bg-gray-400 p-8 h-full\">{renderBoard()}</div>\n      <footer className=\"flex flex-col items-center px-4 pt-2 pb-4 text-white bg-gray-700 \">\n        <div className=\"flex justify-between pt-2 text-xs\">\n          <p>Â© 2020&nbsp;Otaiga</p>\n        </div>\n      </footer>\n    </div>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./styles/styles.css\";\nimport App from \"./components/App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}